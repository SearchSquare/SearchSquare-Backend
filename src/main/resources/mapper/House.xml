<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.searchsquare.house.repository.HouseRepository">

  <resultMap id="house" type="houseDto">
    <id column="apt_id" property="aptId"/>
    <result column="built_year" property="builtYear"/>
    <result column="jibun" property="jibun"/>
    <result column="name" property="name"/>
    <result column="lat" property="lat"/>
    <result column="lng" property="lng"/>
    <result column="is_popular" property="popular"/>
    <association property="address" resultMap="address"/>
    <association property="price" resultMap="price"/>
  </resultMap>

  <resultMap id="address" type="addressDto">
    <result column="dong_code" property="dongCode"/>
    <result column="sido" property="sido"/>
    <result column="gugun" property="gugun"/>
    <result column="dong" property="dong"/>
  </resultMap>

  <resultMap id="price" type="priceDto">
    <result column="max_price" property="maxPrice"/>
    <result column="min_price" property="minPrice"/>
  </resultMap>

  <resultMap id="houseDeal" type="houseDealDto">
    <id column="apt_deal_id" property="houseDealId"/>
    <result column="nickname" property="nickname"/>
    <result column="area" property="area"/>
    <result column="floor" property="floor"/>
    <result column="price" property="price"/>
    <result column="deal_date" property="dealDate"/>
  </resultMap>

  <resultMap id="housePrice" type="housePriceDto">
    <result column="deal_year" property="year"/>
    <result column="avg_price" property="avgPrice"/>
  </resultMap>

  <select id="getTargetPriceList" parameterType="searchAroundPriceCond" resultMap="housePrice">
    select date_format(ad.deal_date, '%Y-%m') as 'deal_year', avg(ad.price) as 'avg_price'
    from apt_deal ad
           left join apt a on ad.apt_id = a.apt_id
    where a.lng = #{lng}
      and a.lat = #{lat}
    group by deal_year
    order by deal_year asc;
  </select>

  <select id="getAroundPriceList" parameterType="searchAroundPriceCond" resultMap="housePrice">
    <![CDATA[
    select date_format(ad.deal_date, '%Y-%m') as 'deal_year', avg(ad.price) as 'avg_price'
    from apt_deal ad
           left join searchsquare.apt a on a.apt_id = ad.apt_id
    where ST_Distance_Sphere(point(lng, lat), point(#{lng}, #{lat})) <= #{radius}
      and dong_code = #{dongCode}
    group by deal_year
    order by deal_year asc;
    ]]>
  </select>

  <select id="getDealList" parameterType="searchHouseDealCond" resultMap="houseDeal">
    select ad.apt_deal_id,
    ad.floor,
    ad.area,
    ad.deal_date,
    ad.price,
    m.nickname
    from apt_deal ad
    left join member m on m.member_id = ad.member_id
    where ad.apt_id = #{houseId}
    <if test="lastDealId != null">
      and ad.apt_deal_id > #{lastDealId}
    </if>
    order by ad.apt_deal_id asc
    limit #{size};
  </select>

  <select id="getHouseList" parameterType="searchHouseCond" resultMap="house">
    select a.apt_id,
    a.name,
    a.lat,
    a.lng,
    a.built_year,
    a.jibun,
    d.dong_code,
    d.sido,
    d.gugun,
    d.dong,
    ifnull(max(ad.price), 0) as max_price,
    ifnull(min(ad.price), 0) as min_price,
    if(pa.apt_id is not null, true, false) as is_popular
    from apt a
    left join dong d on a.dong_code = d.dong_code
    left join apt_deal ad on a.apt_id = ad.apt_id
    left join popular_apt pa on pa.apt_id = a.apt_id
    where a.dong_code = #{dongCode}
    <if test="lastHouseId != null">
      and a.apt_id > #{lastHouseId}
    </if>
    group by a.apt_id
    order by a.apt_id asc
    limit #{size};
  </select>


  <select id="getSido" resultMap="address">
    select distinct left(dong_code, 2) dong_code, sido
    from dong;
  </select>

  <select id="getGugun" parameterType="String" resultMap="address">
    select distinct left(dong_code, 5) dong_code, sido, gugun
    from dong
    where left(dong_code, 2) = #{dongCode}
      and gugun is not null;
  </select>

  <select id="getDong" parameterType="String" resultMap="address">
    select dong_code, sido, gugun, dong
    from dong
    where left(dong_code, 5) = #{dongCode}
      and dong is not null;
  </select>

</mapper>